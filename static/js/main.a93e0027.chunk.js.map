{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","resources/img/404.jpg","components/pages/404.js","components/pages/SingleComicPage.js","resources/img/x-men.png","components/app/App.js","index.js"],"names":["AppHeader","className","to","style","color","isActive","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessege","objectFit","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","char","name","description","length","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","title","pageCount","price","prices","language","textObjects","getComic","getAllComics","View","objFit","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","arr","item","imgStyle","clazz","selectedId","tabIndex","onCharSelected","renderItems","ErrorMessage","disabled","Skeleton","includes","i","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","MainPage","selectedChar","decoration","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","AppBanner","avengers","avengersLogo","ComicsPage","selectedComics","setComics","onComicsSelected","Page404","Carol","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","App","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"mXA0BeA,EAvBG,WACd,OACI,yBAAQC,UAAU,cAAlB,UACI,oBAAIA,UAAU,aAAd,SACI,eAAC,IAAD,CAAMC,GAAI,aAAV,UACI,0CADJ,2BAIJ,qBAAKD,UAAU,YAAf,SACI,+BACI,6BAAI,cAAC,IAAD,CACAE,MAAO,kBAAiB,CAACC,MAAlB,EAAEC,SAAkC,UAAY,YACvDH,GAAI,aAFJ,0BADR,IAKI,6BAAI,cAAC,IAAD,CACAC,MAAO,kBAAiB,CAACC,MAAlB,EAAEC,SAAkC,UAAY,YACvDH,GAAI,UAFJ,+B,OC+CTI,EAhEC,WACZ,OACI,sBAAKC,MAAM,6BAA6BJ,MAAO,CAACK,OAAQ,SAAUC,WAAY,OAAQC,QAAS,SAAUC,MAAM,QAAQC,OAAO,QAAQC,QAAQ,cAAcC,oBAAoB,WAAhL,UACI,mBAAGC,UAAU,mBAAb,SACA,mBAAGA,UAAU,YAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,IAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAb,SACJ,mBAAGA,UAAU,aAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,mBAAb,SACJ,mBAAGA,UAAU,aAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,QAAQC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAChI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,iBAGrG,mBAAGR,UAAU,kCAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,MAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,kCAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,KAAKC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAC7H,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBCxDtG,MAA0B,kCCS1BK,EAPM,WACjB,OACI,qBAAKzB,MAAO,CAAEO,QAAS,QAASC,MAAO,QAASC,OAAQ,QAASiB,UACjE,UAAWrB,OAAQ,UAAWsB,IAAKC,EAAKC,IAAI,e,uBCqDrCC,EAxDU,WACrB,MCDmB,WACnB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KA4BA,MAAO,CAACH,UAASI,QA1BDC,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,CAAC,eAAgB,oBAE5FT,GAAW,GAFa,kBAKGU,MAAML,EAAK,CAACE,SAAQC,OAAMC,YAL7B,WAKdE,EALc,QAONC,GAPM,uBAQV,IAAIC,MAAJ,0BAA6BR,EAA7B,qBAA6CM,EAASG,SAR5C,yBAWDH,EAASI,OAXR,eAWdC,EAXc,OAapBhB,GAAW,GAbS,kBAcbgB,GAda,wCAkBpBhB,GAAW,GACXE,EAAS,KAAEe,SAnBS,+DAAD,sDAsBxB,IAIuBhB,QAAOiB,WAFdd,uBAAY,kBAAMF,EAAS,QAAO,KD3BPiB,GAAvCpB,EAAP,EAAOA,QAASI,EAAhB,EAAgBA,QAASF,EAAzB,EAAyBA,MAAOiB,EAAhC,EAAgCA,WAG1BE,EAAW,4CACXC,EAAU,0CACVC,EAAc,IAEdC,EAAgB,uCAAG,0CAAAjB,EAAA,6DAAOkB,EAAP,+BAAgBF,EAAhB,SACFnB,EAAQ,GAAD,OAAIiB,EAAJ,qCAAyCI,EAAzC,YAAmDH,IADxD,cACfI,EADe,yBAEdA,EAAIT,KAAKU,QAAQC,IAAIC,IAFP,2CAAH,qDAKhBC,EAAY,uCAAG,WAAOC,GAAP,eAAAxB,EAAA,sEACCH,EAAQ,GAAD,OAAIiB,EAAJ,sBAA0BU,EAA1B,YAAgCT,IADxC,cACXI,EADW,yBAEVG,EAAoBH,EAAIT,KAAKU,QAAQ,KAF3B,2CAAH,sDAKZE,EAAsB,SAACG,GACzB,MAAO,CACHD,GAAIC,EAAKD,GACTE,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAAcF,EAAKE,YAAYC,OAAS,IAAMH,EAAKE,YAAYE,MAAM,EAAG,KAAO,MAAQJ,EAAKE,YAAc,6CAC5HG,UAAWL,EAAKK,UAAUC,KAAO,IAAMN,EAAKK,UAAUE,UACtDC,SAAUR,EAAKS,KAAK,GAAGnC,IACvBoC,KAAMV,EAAKS,KAAK,GAAGnC,IACnBqC,OAAQX,EAAKW,OAAOC,QAItBC,EAAmB,SAACF,GACtB,MAAO,CACHZ,GAAIY,EAAOZ,GACXe,MAAOH,EAAOG,MACdZ,YAAaS,EAAOT,aAAe,yBACnCa,UAAWJ,EAAOI,UAAYJ,EAAOI,UAAY,MAAQ,2CACzDC,MAAOL,EAAOM,OAAO,GAAGD,MAAQL,EAAOM,OAAO,GAAGD,MAAQ,IAAM,gBAC/DX,UAAWM,EAAON,UAAUC,KAAO,IAAMK,EAAON,UAAUE,UAC1DjC,IAAKqC,EAAOF,KAAK,GAAGnC,IACpB4C,SAAUP,EAAOQ,YAAYD,UAAY,UAI3CE,EAAQ,uCAAG,WAAOrB,GAAP,eAAAxB,EAAA,sEACKH,EAAQ,GAAD,OAAIiB,EAAJ,kBAAsBU,EAAtB,YAA4BT,IADxC,cACPI,EADO,yBAENmB,EAAiBnB,EAAIT,KAAKU,QAAQ,KAF5B,2CAAH,sDAUd,MAAO,CAAC3B,UAASE,QAAOsB,mBAAkBM,eAAcuB,aALtC,uCAAG,0CAAA9C,EAAA,6DAAOkB,EAAP,+BAAgBF,EAAhB,SACCnB,EAAQ,GAAD,OAAIiB,EAAJ,iCAAqCI,EAArC,YAA+CH,IADvD,cACXI,EADW,yBAEVA,EAAIT,KAAKU,QAAQC,IAAIiB,IAFX,2CAAH,qDAKoDO,WAAUjC,eEvDrE,G,MAAA,IAA0B,qCC0DnCmC,EAAO,SAAC,GAAY,IAAXtB,EAAU,EAAVA,KACJC,EAAgDD,EAAhDC,KAAMC,EAA0CF,EAA1CE,YAAaG,EAA6BL,EAA7BK,UAAWG,EAAkBR,EAAlBQ,SAAUE,EAAQV,EAARU,KACzCa,EAAwB,wEAAdlB,EAAuF,UAAY,QAEnH,OACI,sBAAKvE,UAAU,oBAAf,UACI,qBAAKE,MAAO,CAAC0B,UAAU,GAAD,OAAK6D,IAAW5D,IAAK0C,EAAWxC,IAAI,mBAAmB/B,UAAU,oBACvF,sBAAKA,UAAU,mBAAf,UACI,mBAAGA,UAAU,mBAAb,SAAiCmE,IACjC,mBAAGnE,UAAU,oBAAb,SAAkCoE,IAClC,sBAAKpE,UAAU,mBAAf,UACI,mBAAG0F,KAAMhB,EAAU1E,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAG0F,KAAMd,EAAM5E,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,8BAQT2F,EA1EI,WAEf,MAAwB1D,mBAAS,IAAjC,mBAAOiC,EAAP,KAAa0B,EAAb,KACA,EAAmD5D,IAA5CE,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAO4B,EAAvB,EAAuBA,aAAcX,EAArC,EAAqCA,WAErCwC,qBAAU,WACNC,MACD,IAEH,IAAMC,EAAe,SAAC7B,GAClB0B,EAAQ1B,IAGN4B,EAAa,WACfzC,IACA,IAAMY,EAAK+B,KAAKC,MAAM,IAAAD,KAAKE,SAAiC,QAC5DlC,EAAaC,GAERkC,KAAKJ,IAORK,EAAehE,EAAQ,cAAC,EAAD,IAAkB,KACzCiE,EAAUnE,EAAU,cAAC,EAAD,IAAa,KACjCoE,EAAYpE,GAAWE,EAA+B,KAAtB,cAAC,EAAD,CAAM8B,KAAMA,IAElD,OACI,sBAAKlE,UAAU,aAAf,UACKoG,EACAC,EACAC,EACD,sBAAKtG,UAAU,qBAAf,UACI,oBAAGA,UAAU,oBAAb,wCAC+B,uBAD/B,4CAIA,mBAAGA,UAAU,oBAAb,mCAGA,wBAAQuG,QArBL,WACXT,KAoBiC9F,UAAU,sBAAnC,SACI,qBAAKA,UAAU,QAAf,sBAEJ,qBAAK6B,IAAK2E,EAASzE,IAAI,UAAU/B,UAAU,kC,OCwC5CyG,G,MArFE,SAACC,GAEd,MAAgCzE,mBAAS,IAAzC,mBAAO0E,EAAP,KAAiBC,EAAjB,KACA,EAA4C3E,oBAAS,GAArD,mBAAO4E,EAAP,KAAuBC,EAAvB,KACA,EAA4B7E,mBAAS,KAArC,mBAAO0B,EAAP,KAAeoD,EAAf,KACA,EAAkC9E,oBAAS,GAA3C,mBAAO+E,EAAP,KAAkBC,EAAlB,KAEA,EAA2CjF,IAApCE,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAOsB,EAAvB,EAAuBA,iBAEvBmC,qBAAU,WACNqB,EAAUvD,GAAQ,KACnB,IAEH,IAAMuD,EAAY,SAACvD,EAAQwD,GACbL,GAAVK,GACAzD,EAAiBC,GACZwC,KAAKiB,IAGRA,EAAmB,SAACC,GACtB,IAAIC,GAAQ,EACRD,EAAYhD,OAAS,IACrBiD,GAAQ,GAGZV,GAAY,SAAAD,GAAQ,4BAAQA,GAAR,YAAqBU,OACzCP,GAAkB,SAAAD,GAAc,OAAI,KACpCE,GAAU,SAAApD,GAAM,OAAIA,EAAS,KAC7BsD,GAAa,SAAAD,GAAS,OAAIM,MA+B9B,IAAMxC,EA5BN,SAAqByC,GACjB,IAAMzC,EAASyC,EAAIzD,KAAI,SAAC0D,GACpB,IAAIC,EAAW,CAAC,UAAc,SACP,wEAAnBD,EAAKjD,YACLkD,EAAW,CAAC,UAAc,UAG9B,IAAIC,EAASF,EAAKvD,KAAOyC,EAAMiB,WAAc,iCAAmC,aAEhF,OACI,qBACI3H,UAAW0H,EACXE,SAAU,EAEVrB,QAAS,WAAOG,EAAMmB,eAAeL,EAAKvD,KAJ9C,UAKQ,qBAAKpC,IAAK2F,EAAKjD,UAAWxC,IAAKyF,EAAKrD,KAAMjE,MAAOuH,IACjD,qBAAKzH,UAAU,aAAf,SAA6BwH,EAAKrD,SAHjCqD,EAAKvD,OAQtB,OACI,oBAAIjE,UAAU,aAAd,SACK8E,IAKCgD,CAAYnB,GAEpBP,EAAehE,EAAQ,cAAC2F,EAAD,IAAkB,KACzC1B,EAAUnE,IAAY2E,EAAiB,cAAC,EAAD,IAAa,KAE1D,OACI,sBAAK7G,UAAU,aAAf,UACKoG,EACAC,EACAvB,EACD,wBACI9E,UAAU,mCACVgI,SAAUnB,EACV3G,MAAO,CAAC,QAAW8G,EAAY,OAAS,SACxCT,QAAS,kBAAMW,EAAUvD,IAJ7B,SAKI,qBAAK3D,UAAU,QAAf,8BC9DDiI,G,MAjBE,WACb,OACI,qCACI,mBAAGjI,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCmCzBwF,G,MAAM,SAAC,GAAY,IAAXtB,EAAU,EAAVA,KACHC,EAAwDD,EAAxDC,KAAMC,EAAkDF,EAAlDE,YAAaG,EAAqCL,EAArCK,UAAWG,EAA0BR,EAA1BQ,SAAUE,EAAgBV,EAAhBU,KAAMC,EAAUX,EAAVW,OAC/CY,EAASlB,EAAU2D,SAAS,uBAAyB,UAAY,QACvE,OACI,qCACI,sBAAKlI,UAAU,eAAf,UACI,qBAAK6B,IAAK0C,EAAWxC,IAAKoC,EAAMjE,MAAO,CAAC0B,UAAU,GAAD,OAAK6D,MACtD,gCACI,qBAAKzF,UAAU,kBAAf,SAAkCmE,IAClC,sBAAKnE,UAAU,aAAf,UACI,mBAAG0F,KAAMhB,EAAU1E,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAG0F,KAAMd,EAAM5E,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,6BAKhB,qBAAKA,UAAU,cAAf,SACKoE,IAEL,qBAAKpE,UAAU,eAAf,qBACA,qBAAIA,UAAU,oBAAd,UACK6E,EAAOR,OAAS,EAAI,KAAM,wCAEvBQ,EAAOf,KAAI,SAAC0D,EAAMW,GACd,KAAIA,GAAK,IACT,OACI,oBAAanI,UAAU,oBAAvB,SACKwH,EAAKrD,MADAgE,cAevBC,EApFE,SAAC1B,GAEd,MAAwBzE,mBAAS,MAAjC,mBAAOiC,EAAP,KAAa0B,EAAb,KAEA,EAAmD5D,IAA5CE,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAO4B,EAAvB,EAAuBA,aAAcX,EAArC,EAAqCA,WAErCwC,qBAAU,WACNC,MACD,CAACY,EAAM2B,SAEV,IAAMvC,EAAa,WACf,IAAOuC,EAAU3B,EAAV2B,OACFA,IAILhF,IACAW,EAAaqE,GACRlC,KAAKJ,KAGRA,EAAe,SAAC7B,GAClB0B,EAAQ1B,IAGNoE,EAAWpE,GAAQhC,GAAWE,EAAQ,KAAO,cAAC,EAAD,IAC7CgE,EAAehE,EAAQ,cAAC,EAAD,IAAkB,KACzCiE,EAAUnE,EAAU,cAAC,EAAD,IAAa,KACjCoE,EAAYpE,GAAWE,IAAU8B,EAA8B,KAAtB,cAAC,EAAD,CAAMA,KAAMA,IAE3D,OACI,sBAAKlE,UAAU,aAAf,UACKsI,EACAlC,EACAC,EACAC,M,gCCpBEiC,E,4MAnBXC,MAAQ,CACJpG,OAAO,G,uDAGX,SAAkBA,EAAOqG,GACrBC,KAAKC,SAAS,CACVvG,OAAO,M,oBAIf,WACI,OAAIsG,KAAKF,MAAMpG,MACJ,cAAC,EAAD,IAGJsG,KAAKhC,MAAMkC,a,SAhBEC,WCHb,MAA0B,mCCmC1BC,EA1BE,WAEb,MAAgC7G,mBAAS,MAAzC,mBAAO8G,EAAP,KAAqBnD,EAArB,KAMA,OACI,qCACI,cAAC,EAAD,UACI,cAAC,EAAD,MAEJ,sBAAK5F,UAAU,gBAAf,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU6H,eAXH,SAAC5D,GACpB2B,EAAQ3B,IAU8C0D,WAAYoB,MAE1D,cAAC,EAAD,UACI,cAAC,EAAD,CAAUV,OAAQU,SAG1B,qBAAK/I,UAAU,gBAAgB6B,IAAKmH,EAAYjH,IAAI,eCwDjDkH,G,MA/EI,WAEf,MAAoChH,mBAAS,IAA7C,mBAAOiH,EAAP,KAAmBC,EAAnB,KACA,EAA4ClH,oBAAS,GAArD,mBAAO4E,EAAP,KAAuBC,EAAvB,KACA,EAA4B7E,mBAAS,IAArC,mBAAO0B,EAAP,KAAeoD,EAAf,KACA,EAAsC9E,oBAAS,GAA/C,mBAAOmH,EAAP,KAAoBC,EAApB,KAEA,EAAuCrH,IAAhCE,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAOmD,EAAvB,EAAuBA,aAEvBM,qBAAU,WACNqB,EAAUvD,GAAQ,KACnB,IAEH,IAAMuD,EAAY,SAACvD,EAAQwD,GACbL,GAAVK,GACA5B,EAAa5B,GACRwC,KAAKmD,IAGRA,EAAqB,SAACC,GACxB,IAAIjC,GAAQ,EACRiC,EAAclF,OAAS,IACvBiD,GAAQ,GAGZ6B,GAAc,SAAAD,GAAU,4BAAQA,GAAR,YAAuBK,OAC/CzC,GAAkB,SAAAD,GAAc,OAAI,KACpCE,GAAU,SAAApD,GAAM,OAAIA,EAAS,KAC7B0F,GAAe,SAAAD,GAAW,OAAI9B,MA4BlC,IAAMxC,EAzBN,SAAqByC,GACjB,IAAMzC,EAASyC,EAAIzD,KAAI,SAAC0D,GACpB,IAAIC,EAAW,CAAC,UAAc,SAK9B,MAJuB,wEAAnBD,EAAKjD,YACLkD,EAAW,CAAC,UAAc,UAI1B,oBAAIzH,UAAU,eAAd,SACI,eAAC,IAAD,CAAMC,GAAE,kBAAauH,EAAKvD,IAA1B,UACI,qBAAKpC,IAAK2F,EAAKjD,UAAWxC,IAAI,eAAe/B,UAAU,mBAAmBE,MAAOuH,IACjF,qBAAKzH,UAAU,oBAAf,SAAoCwH,EAAKxC,QACzC,qBAAKhF,UAAU,qBAAf,SAAqCwH,EAAKtC,YAJhBsC,EAAKvD,OAU/C,OACI,oBAAIjE,UAAU,eAAd,SACK8E,IAKCgD,CAAYoB,GAEpB9C,EAAehE,EAAQ,cAAC2F,EAAD,IAAkB,KACzC1B,EAAUnE,IAAY2E,EAAiB,cAAC,EAAD,IAAa,KAK1D,OACI,sBAAK7G,UAAU,eAAf,UACIoG,EACAC,EACAvB,EACA,wBAAQ9E,UAAU,mCACVgI,SAAUnB,EACV3G,MAAO,CAAC,QAAWkJ,EAAc,OAAS,SAC1C7C,QAAS,kBAAMW,EAAUvD,IAHjC,SAII,qBAAK3D,UAAU,QAAf,8BChFD,G,MAAA,IAA0B,sCCA1B,MAA0B,0CCiB1BwJ,EAbG,WACd,OACI,sBAAKxJ,UAAU,cAAf,UACI,qBAAK6B,IAAK4H,EAAU1H,IAAI,aACxB,sBAAK/B,UAAU,mBAAf,mCAC0B,uBAD1B,iBAIA,qBAAK6B,IAAK6H,EAAc3H,IAAI,sBCSzB4H,EAhBI,WAEf,MAAoC1H,mBAAS,MAA7C,mBAAO2H,EAAP,KAAuBC,EAAvB,KAMA,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAYC,iBAPK,SAAC7F,GACtB4F,EAAU5F,IAM0C0D,WAAYiC,QChBzD,MAA0B,gCCsB1BG,G,MAlBC,WACZ,OACI,sBAAK/J,UAAU,QAAf,UACI,sBAAKA,UAAU,cAAf,UACI,oDACA,wFACA,2GAA6E,uBAA7E,4BACA,cAAC,IAAD,CAAMC,GAAI,aAAcD,UAAU,sBAAlC,SACI,qBAAKA,UAAU,QAAf,2BAIR,qBAAK6B,IAAKmI,EAAOjI,IAAI,YAAY/B,UAAU,oBC2BjDwF,G,MC3CS,ID2CF,SAAC,GAAa,IAAZyE,EAAW,EAAXA,MACJjF,EAA6DiF,EAA7DjF,MAAOZ,EAAsD6F,EAAtD7F,YAAaa,EAAyCgF,EAAzChF,UAAWC,EAA8B+E,EAA9B/E,MAAOX,EAAuB0F,EAAvB1F,UAAWa,EAAY6E,EAAZ7E,SAExD,OACI,sBAAKpF,UAAU,eAAf,UACI,qBAAK6B,IAAK0C,EAAWxC,IAAKiD,EAAOhF,UAAU,sBAC3C,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCgF,IACpC,mBAAGhF,UAAU,sBAAb,SAAoCoE,IACpC,mBAAGpE,UAAU,sBAAb,SAAoCiF,IACpC,oBAAGjF,UAAU,sBAAb,uBAA8CoF,KAC9C,qBAAKpF,UAAU,sBAAf,SAAsCkF,OAE1C,cAAC,IAAD,CAAMjF,GAAI,UAAWD,UAAU,qBAA/B,8BAKGkK,EAnDS,WACpB,IAAOC,EAAWC,cAAXD,QACP,EAA0BlI,mBAAS,MAAnC,mBAAOgI,EAAP,KAAcI,EAAd,KACA,EAA+CrI,IAAxCE,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAOkD,EAAvB,EAAuBA,SAAUjC,EAAjC,EAAiCA,WAEjCwC,qBAAU,WACNyE,MACD,CAACH,IAEJ,IAAMG,EAAc,WAChBjH,IACAiC,EAAS6E,GACJhE,KAAKoE,IAGRA,EAAgB,SAACN,GACnBI,EAASJ,IAGP7D,EAAehE,EAAQ,cAAC,EAAD,IAAkB,KACzCiE,EAAUnE,EAAU,cAAC,EAAD,IAAa,KACjCoE,EAAYpE,GAAWE,IAAU6H,EAAiC,KAAxB,cAAC,EAAD,CAAMA,MAAOA,IAG7D,OACI,qCACK7D,EACAC,EACAC,MEXEkE,EAnBH,WAER,OACI,cAAC,IAAD,UACI,sBAAKxK,UAAU,MAAf,UACI,cAAC,EAAD,IACA,+BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwE,KAAK,aAAaiG,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOjG,KAAK,UAAUiG,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOjG,KAAK,mBAAmBiG,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOjG,KAAK,IAAIiG,QAAS,cAAC,EAAD,iB,MCdjDC,IACEC,WAAWC,SAASC,eAAe,SACnCC,OACG,cAAC,EAAD,O","file":"static/js/main.a93e0027.chunk.js","sourcesContent":["import { Link, NavLink } from 'react-router-dom';\r\nimport './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <Link to={'/MarvelApp'}>\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><NavLink \r\n                        style={({isActive}) => ({color: isActive ? '#9f0013' : 'inherit'})}\r\n                        to={'/MarvelApp'}>Characters</NavLink></li>\r\n                    /\r\n                    <li><NavLink  \r\n                        style={({isActive}) => ({color: isActive ? '#9f0013' : 'inherit'})}\r\n                        to={'/comics'}>Comics</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessege = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit:\r\n        'contain', margin: '0 auto'}} src={img} alt='Error gif'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessege;\r\n\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=f1f2a9b41071a1fd264206d5790f7cf5';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res =  await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? char.description.length > 100 ? char.description.slice(0, 100) + '...' : char.description : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"There's no description\",\r\n            pageCount: comics.pageCount ? comics.pageCount + ' p.' : 'No information about the number of pages',\r\n            price: comics.prices[0].price ? comics.prices[0].price + '$' : 'not available',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            url: comics.urls[0].url,\r\n            language: comics.textObjects.language || 'en-us'\r\n        }\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0])\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, getAllComics, getComic, clearError}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        \r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n            \r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessege from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\r\n    const [char, setChar] = useState({});\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n    }, [])\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        getCharacter(id)\r\n            //.then(this.onCharLoaded) Если в then приходит ссылка на функцию, то аргумент, который приходит в then автоматически подставится в функцию\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n    const onRoll = () => {\r\n        updateChar();\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessege/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button onClick={onRoll} className=\"button button__main\">\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n    const objFit = (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') ? \"contain\" : \"cover\";\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img style={{objectFit: `${objFit}`}} src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">{description}</p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n    \r\n    const {loading, error, getAllCharacters} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded);\r\n    }\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(charEnded => ended)\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n\r\n            let clazz = (item.id === props.selectedId) ? 'char__item char__item_selected' : 'char__item'\r\n\r\n            return (\r\n                <li \r\n                    className={clazz}\r\n                    tabIndex={0}\r\n                    key={item.id}\r\n                    onClick={() => {props.onCharSelected(item.id)}}>\r\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                        <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n    \r\n    const items = renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{'display': charEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nCharList.propTypes ={\r\n    onCharSelected: PropTypes.func\r\n};\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessege from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton'\r\nimport './charInfo.scss';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nconst CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n    }, [props.charId])\r\n\r\n    const updateChar = () => {\r\n        const {charId} = props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>;\r\n    const errorMessage = error ? <ErrorMessege/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View =({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n    const objFit = thumbnail.includes(\"image_not_available\") ? \"contain\" : \"cover\";\r\n    return(\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={{objectFit: `${objFit}`}}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null: 'There is no comics for this character'}\r\n                {\r\n                    comics.map((item, i) => {\r\n                        if (i >= 10) return\r\n                        return (\r\n                            <li  key={i} className=\"char__comics-item\">\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n};\r\n\r\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessege from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n    \r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessege/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected} selectedId={selectedChar}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(30);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded);\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setOffset(offset => offset + 8);\r\n        setComicsEnded(comicsEnded => ended)\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n\r\n            return (\r\n                <li className=\"comics__item\" key={item.id}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\" style={imgStyle}/>\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n        \r\n        \r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n           {errorMessage}\r\n           {spinner}\r\n           {items}\r\n            <button className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    style={{'display': comicsEnded ? 'none' : 'block'}}\r\n                    onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import { useState } from \"react\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    const [selectedComics, setComics] = useState(null);\r\n\r\n    const onComicsSelected = (id) => {\r\n        setComics(id)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList onComicsSelected={onComicsSelected} selectedId={selectedComics}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/404.ea7edaaa.jpg\";","import { Link } from \"react-router-dom\"\r\nimport Carol from \"../../resources/img/404.jpg\"\r\nimport './404.scss'\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div className=\"error\">\r\n            <div className=\"error__text\">\r\n                <h1>404 page not found</h1>\r\n                <h4>HYDRA has stolen this page from S.H.I.E.L.D. database!</h4>\r\n                <p>Check that you typed the address correctly, go back to your previous page <br/> or click this button.</p>\r\n                <Link to={'/MarvelApp'} className=\"button button__main\">\r\n                    <div className=\"inner\">Homepage</div>\r\n                </Link>\r\n            </div>\r\n            \r\n            <img src={Carol} alt=\"error 404\" className=\"error__img\"/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Page404;","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessege from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton'\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './singleComicPage.scss';\r\nimport xMen from '../../resources/img/x-men.png';\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessege/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount, price, thumbnail, language} = comic\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to={'/comics'} className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport MainPage from \"../pages/MainPage\";\r\nimport ComicsPage from \"../pages/ComicsPage\";\r\nimport Page404 from \"../pages/404\";\r\nimport SingleComicPage from \"../pages/SingleComicPage\"\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <main>\r\n                    <Routes>\r\n                        <Route path=\"/MarvelApp\" element={<MainPage/>}/>\r\n                        <Route path=\"/comics\" element={<ComicsPage/>}/>\r\n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage/>}/>\r\n                        <Route path=\"*\" element={<Page404/>}/>\r\n                    </Routes>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\nReactDOM\r\n\t.createRoot(document.getElementById('root'))\r\n\t.render(\r\n    \t<App />\r\n\t);\r\n"],"sourceRoot":""}